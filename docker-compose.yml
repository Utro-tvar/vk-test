services:
  postgres:
    build:
      context: ./postgres
    container_name: postgres
    env_file:
      - ./postgres/.env
    networks:
      - internal
    restart: always

  backend:
    build:
      context: ./
      dockerfile: ./backend/Dockerfile
    container_name: backend
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
    env_file:
      - ./backend/.env
    depends_on:
      - postgres
    networks:
      - internal
    restart: always

  frontend:
    build:
      context: ./frontend
      args:
        - BACKEND_URL=http://backend:80
    container_name: frontend
    env_file:
      - ./frontend/.env
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - internal
      - frontend
    restart: always
  
  pinnger:
    build:
      context: ./
      dockerfile: ./pinger/Dockerfile
    container_name: pinger
    environment:
      - BACK_ADDR=backend
      - BACK_PORT=80
    env_file:
      - ./pinger/.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - backend
    network_mode: "host"
    restart: always

networks:
  internal:
    driver: bridge
    internal: true
  frontend:
    driver: bridge

